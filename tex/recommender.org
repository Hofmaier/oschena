#+TITLE: Recommender 
#+OPTIONS: toc:nil

* User-user collaborative filtering
** Similarity
* User-user collaborative filtering
User base filtering sucht nach user, die aehnlich sind. 
Die Technik um aehnliche User zu finden heisst kNN. k neirest neighbors.
[[http://elehack.net/research/pubs/cf-survey/cf-survey.pdf][collaborative fitering recommendations]]
** Similarity
Es wird eine neighborhood N fuer einen user u erstellt.
*** Euclidean distance
ich verwende die squared euclidien distance
ein beispiel
[1,2,3] [2,4,6] = 14

*** Pearson Similarity
Um zwei User miteinander zu vergleichen, kann die Pearson Similarity eingesetzt werden.
Was passiert mit User die keine gemeinschaftlichen Item gerated haben? 
Wenn es keinen User gibt, der das selbe Item bewertet hat, ist der Korrelationskoeffizient -1.
Die Pearson Similarity beruecksichtigt nur gemeinsam geratete Daten.
Was passiert wenn zwei User ein einziges gemeinsames Item haben und dieses gleich bewerten?
Dann zeigt der Pearson Correlation Coffezient eine hohe Aehnlichkeit an.
\[
sim(u, v) = \frac{(r_{u,i} - r_u), (r_{u,i} - r_u)}
\]
*** Beispieldaten

| item | rating u1 | rating u2 |
|------+-----------+-----------|
|    1 |        43 |        99 |
|    2 |        21 |        65 |
|    3 |        25 |        79 |
|    4 |        42 |        75 |
|    5 |        57 |        87 |
|    6 |        59 |        81 |

2868 / 5413.27 = 0.529809

3,5,5,1,4
5,5,4,1,2
0.641503

2,3,4,5,5
1,2,3,4,4
-1

1,2,3,4,5
5,4,3,2,1
-1

* Data
[[http://files.grouplens.org/datasets/movielens/ml-100k-README.txt][movielens 100k ratings set readme]]
[[http://files.grouplens.org/datasets/movielens/ml-100k.zip][movielens 100k ratings zip file]]
Daten in u.data sind in Kolonnen strukturiert. 
Erste Kolonne user id, zweite item.id, dritte rating, vierte timestamp
u1.base hat 80000 ratings.
* Evaluation
- movielens data set hat 5 training test paare. u1.base - u1.test. 
- training/test ration = x = 80000/20000
- ich verwende eine accuracy metric. den mean absolute error mae.
